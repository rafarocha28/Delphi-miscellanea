unit EndianSwap.Utils;

interface

type
  TUtils = class
    class function SwapEndian32(Value: integer): integer; register;
    class function SwapEndian16(Value: smallint): smallint; register;
  end;


function SwapEndian16(Value: smallint): smallint; register;
function SwapEndian32(Value: integer): integer; register;

function SwapEndianString(AString: String): String;

implementation

function SwapEndian32(Value: integer): integer; register;
asm
  bswap eax;
end;

function SwapEndian16(Value: smallint): smallint; register;
asm
  xchg  al, ah
end;

function SwapEndianString(AString: String): String;
var
  position: Integer;
begin
  Result := EmptyStr;

  if Length(AString) mod 2 <> 0 then
    Exit;

  position := Length(AString) - 1;
  while position >= 0 do
  begin
    Result := Result + Copy(AString, position, 2);
    Dec(position, 2);
  end;
end;

end.
